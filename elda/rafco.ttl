#
# RAFCO config. 
#

# Assorted prefix declarations. Some of them are for the structuring
# of the API config, others are for the vocabulary definitions.
#

@prefix api:                <http://purl.org/linked-data/api/vocab#> .
@prefix dct:	            <http://purl.org/dc/terms/> .

@prefix rdf:                <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:               <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd:                <http://www.w3.org/2001/XMLSchema#> .

# The elda namespace/prefix is for Elda extensions to the LDA specification.
@prefix elda:               <http://www.epimorphics.com/vocabularies/lda#> .

# Prefix for example-local entities.
@prefix rafco:		    <http://rafco.jgsogo.es/spec/rafco.ttl#>.
@prefix spec:               <http://rafco.jgsogo.es/spec/rafco.ttl#>.

# ---------------------------------------------------------------------
# API config

rafco:rafco a api:API 
	; rdfs:label "RAFCO Ontology"@en
	; api:sparqlEndpoint <http://rafco.jgsogo.es/sparql/>
	; api:maxPageSize 50
	; api:defaultPageSize 10
	; api:defaultViewer api:labelledDescribeViewer
	; api:defaultFormatter spec:HtmlFormatter 
	; api:endpoint rafco:recipes 

	; api:variable [api:name "visibleSparqlForm"; api:value "http://rafco.jgsogo.es/sparql/"]
	; api:variable [api:name "_stagePattern"; api:value "^/recipes$"]
	.
	
# Endpoint definition	
	
rafco:recipes a api:ListEndpoint 
	; rdfs:label "Recipes" 
	; api:uriTemplate "/recipes" 
	; api:selector [api:filter "type=Recipe"]
	#TODO: Add at least a viewer, e.g. RecipeViewer
	.

# Oscar: this is very useful to avoid unnecessarily long and slow SPARQL queries from being generated, given the type of triple store that you have made available	
<http://rafco.jgsogo.es/sparql/> elda:supportsNestedSelect true.

#
# This XSLT formatter produces rich HTML from the viewer properties.
#

rafco:RecipeViewer
    a api:Viewer ;
    api:name "recipeviewer" ;
    api:properties "label,description".

#
# This XSLT formatter produces rich HTML from the viewer properties.
#

spec:HtmlFormatter a api:XsltFormatter 
	; api:name "html" 
	; api:mimeType "text/html; charset=utf-8" 
	; api:stylesheet "lda-assets/xslt/result-osm.xsl"
	.

rafco:Recipe a rdfs:Class
	; rdfs:label "Recipe"
	; api:label "Recipe"
	.
	
rdfs:label api:label "label" ; api:multiValued true .
rdfs:comment api:label "description" .

