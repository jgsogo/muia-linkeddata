#
# RAFCO config. 
#

# Assorted prefix declarations. Some of them are for the structuring
# of the API config, others are for the vocabulary definitions.
#

@prefix api:                <http://purl.org/linked-data/api/vocab#> .
@prefix dc:                 <http://purl.org/dc/elements/1.1/> .

@prefix rdf:                <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:               <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd:                <http://www.w3.org/2001/XMLSchema#> .
@prefix skos:               <http://www.w3.org/2004/02/skos/core#> .
@prefix owl:                <http://www.w3.org/2002/07/owl#> .

@prefix foaf:               <http://xmlns.com/foaf/0.1/> .

# The elda namespace/prefix is for Elda extensions to the LDA specification.
@prefix elda:               <http://www.epimorphics.com/vocabularies/lda#> .

# Prefix for rafco entities.
@prefix rafco:		<http://rafco.jgsogo.es/linkeddata/def/rafco#>.
@prefix spec:       <http://rafco.jgsogo.es/linkeddata/def/rafco#>.

# ---------------------------------------------------------------------
# API config

rafco:rafco a api:API 
	; rdfs:label "RAFCO Ontology"@en
	; api:sparqlEndpoint <http://rafco.jgsogo.es/sparql/>
	; api:maxPageSize 50
	; api:defaultPageSize 10
	; api:defaultViewer api:labelledDescribeViewer
	; api:defaultFormatter spec:HtmlFormatter 
	; api:endpoint rafco:recipes, rafco:recipe, rafco:foods, rafco:food, rafco:diseases, rafco:disease
	; api:variable [api:name "visibleSparqlForm"; api:value "http://rafco.jgsogo.es/sparql/"]
	#; api:variable [api:name "_stagePattern"; api:value "^/recipes$"]
	.
	
# Endpoint definition	

rafco:recipes a api:ListEndpoint 
	; rdfs:label "Recipes" 
	; api:uriTemplate "/recurso/recipes" 
	; api:selector [api:filter "type=Recipe"]
	; api:defaultViewer rafco:RecipeListViewer
	; api:viewer rafco:RecipeListViewer
	.

spec:recipe a api:ItemEndpoint 
  	; rdfs:label "Recipe" 
  	; api:uriTemplate "/recurso/recipe/{number}"
  	; api:itemTemplate "http://rafco.jgsogo.es/linkeddata/recurso/recipe/{number}" 
  	; api:defaultViewer rafco:RecipeViewer 
  	; api:viewer rafco:RecipeViewer
	.

rafco:foods a api:ListEndpoint
	; rdfs:label "Foods"
	; api:uriTemplate "/recurso/foods"
	; api:selector [api:filter "type=Food"]
	; api:defaultViewer rafco:FoodListViewer
	; api:viewer rafco:FoodListViewer
	.

rafco:food a api:ItemEndpoint
	; rdfs:label "Food"
	; api:uriTemplate "/recurso/food/{number}"
	; api:itemTemplate "http://rafco.jgsogo.es/linkeddata/recurso/food/{number}"
	; api:defaultViewer rafco:FoodViewer
	; api:viewer rafco:FoodViewer
	.

rafco:diseases a api:ListEndpoint
        ; rdfs:label "Diseases"
        ; api:uriTemplate "/recurso/diseases"
        ; api:selector [api:filter "type=Disease"]
        ; api:defaultViewer rafco:DiseaseListViewer
        ; api:viewer rafco:DiseaseListViewer
        .

rafco:disease a api:ItemEndpoint
        ; rdfs:label "Disease"
        ; api:uriTemplate "/recurso/disease/{number}"
        ; api:itemTemplate "http://rafco.jgsogo.es/linkeddata/recurso/disease/{number}"
        ; api:defaultViewer rafco:DiseaseViewer
        ; api:viewer rafco:DiseaseViewer
        .


# Oscar: this is very useful to avoid unnecessarily long and slow SPARQL queries from being generated, given the type of triple store that you have made available	
<http://rafco.jgsogo.es/sparql/> elda:supportsNestedSelect true.

#
# This XSLT formatter produces rich HTML from the viewer properties.
#

spec:HtmlFormatter a api:XsltFormatter 
	; api:name "html" 
	; api:mimeType "text/html; charset=utf-8" 
	; api:stylesheet "lda-assets/xslt/rafco-osm.xsl"
	.

#
# This XSLT formatter produces rich HTML from the viewer properties.
#

rafco:RecipeListViewer a api:Viewer
	; api:name "recipelistviewer"
	; api:properties "label,hasTitle,hasDescription,hasAuthor"
	.

rafco:RecipeViewer a api:Viewer
	; api:name "recipeviewer"
	; api:properties "label,hasTitle"
	.

rafco:FoodListViewer a api:Viewer
	; api:name "foodlistviwer"
	; api:properties "label,shrtDesc,sciName"
	.

rafco:FoodViewer a api:Viewer
	; api:name "foodviewer"
	; api:properties "label,shrtDesc,sciName,longDesc,langual,foodCauses"
	.

rafco:DiseaseListViewer a api:Viewer
        ; api:name "diseaselistviwer"
        ; api:properties "label,doid"
        .

rafco:DiseaseViewer a api:Viewer
        ; api:name "diseaseviewer"
        ; api:properties "label,doid,diseaseDesc"
        .


############################################################################
# The rest of this config is vocabulary definitions.

rdf:Property api:label "Property" .

rdf:type api:label "type" 
    ; api:multiValued true 
    ; rdfs:range rdfs:Class 
    .

rdf:value api:label "value" .

rdfs:Class api:label "Class" .

rdfs:label api:label "label" ; api:multiValued true .

rdfs:seeAlso api:label "seeAlso" ; api:multiValued true .

rdfs:comment api:label "comment" .

rdfs:range api:label "range" .

rdfs:domain api:label "domain" .

rdfs:isDefinedBy api:label "isDefinedBy" .

rdfs:subClassOf api:label "subClassOf" .

rdfs:subPropertyOf api:label "subPropertyOf" .

owl:sameAs api:label "sameAs" .

owl:imports api:label "imports" .

owl:versionInfo api:label "versionInfo" .

foaf:isPrimaryTopicOf a rdf:Property
    ; api:label "isPrimaryTopicOf"
    .

# appears (incorrectly) in some transport data. 
skos:prefName api:label "prefName".

skos:Concept api:label "Concept" .

skos:ConceptScheme api:label "ConceptScheme" .

skos:prefLabel api:label "prefLabel" .

skos:altLabel api:label "altLabel" 
	; api:multiValued true .

skos:note api:label "note" .

skos:notation api:label "notation" .

skos:scopeNote api:label "scopeNote" .

skos:topConceptOf api:label "topConceptOf" 
	; rdfs:range rdfs:Resource
	.

skos:hasTopConcept api:label "topConcept"  
	; rdfs:range rdfs:Resource 
	; api:multiValued true 
	.

skos:broader api:label "broader"  
	; rdfs:range rdfs:Resource
	.

skos:narrower api:label "narrower"  
	; rdfs:range rdfs:Resource
	; api:multiValued true 
	.


############################################################################
# Vocabulary definitions related to RAFCO


# Recipe
rafco:Recipe a rdfs:Class
	; rdfs:label "Recipe"
	; api:label "Recipe"
	.

rafco:hasTitle api:label "Title"  
	; rdfs:range rdfs:Resource .

rafco:hasDescription api:label "Description"
	; rdfs:range rdfs:Resource .

rafco:hasAuthor api:label "Author"
	; rdfs:range foaf:Person .

# Food
rafco:Food a rdfs:Class
	; rdfs:label "Food"
	; api:label "Food"
	.

rafco:shrtDesc api:label "ShortDescription"
	; rdfs:range rdfs:Resource .

rafco:longDesc api:label "LongDescription"
	; rdfs:range rdfs:Resource .

rafco:sciName api:label "ScientificName"
	; rdfs:range rdfs:Resource .

rafco:langual api:label "Langual"
	; rdfs:range rdfs:Resource ; api:multiValued true .

rafco:foodCauses api:label "FoodCauses"
	; rdfs:range rafco:Disease ; api:multiValued true .


# Disease
rafco:Disease a rdfs:Class
	; rdfs:label "Disease"
	; api:label "Disease"
	.

rafco:doid api:label "DOID"
	; rdfs:range rdfs:Resource .

rafco:diseaseDesc api:label "Description"
	; rdfs:range rdfs:Resource .
